#!/usr/bin/python
import sys, os
import optparse
import urllib2

# add path of burst library
burst_lib = os.path.abspath(os.path.join(os.path.dirname(os.path.abspath(sys.argv[0])), '../lib'))
sys.path.append(burst_lib)
import pynaoqi

# we use twisted in a thread if requested
options = pynaoqi.getDefaultOptions()

if options.twisted:
    from ipy import IPShellTwisted
    shellclass = lambda ns: IPShellTwisted(argv=[], user_ns=ns)
else:
    import IPython.ipapi
    shellclass = IPython.ipapi.launch_new_instance

# parse command line arguments
try:
    con = pynaoqi.getDefaultConnection()
except urllib2.URLError, e:
    print "error connecting: %s" % e
    raise SystemExit

if con.options.video:
    sys.argv.append('-gthread')
    con.retrieveImages()

# start ipython shell
def s(d):
    def cb(r):
        globals()['last'] = r
        print r
    d.addCallback(cb)

my_ns = dict(
    con = con,
    pynaoqi = pynaoqi,
    s = s)

print "<"*30 + "o"*20 + ">"*30
print """Pynaoqi shell - con object holds all the modules, methods, help!
To get deferred value back, use s, as in:
s con.ALMemory.getListData(mylist)

the value returned from the last fired deferred will be in
"last\""""
print "_"*80
shell = shellclass(my_ns)

# If in twisted, start the mainloop
if options.twisted:
    shell.mainloop()

